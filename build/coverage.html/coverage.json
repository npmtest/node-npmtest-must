{"/home/travis/build/npmtest/node-npmtest-must/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_must */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-must/lib.npmtest_must.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/lib.npmtest_must.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_must */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_must = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_must = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-must/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-must && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_must */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_must","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_must.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_must.rollup.js'] =","            local.assetsDict['/assets.npmtest_must.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_must.__dirname + '/lib.npmtest_must.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/register.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/register.js","s":{"1":1,"2":1,"3":3,"4":4},"b":{},"f":{"1":3,"2":4},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":7},"end":{"line":25,"column":18}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":24,"column":0},"end":{"line":38,"column":2}},"3":{"start":{"line":25,"column":34},"end":{"line":25,"column":56}},"4":{"start":{"line":28,"column":4},"end":{"line":33,"column":6}}},"branchMap":{},"code":["var Must = module.exports = require(\"./must\")","/* eslint no-extend-native: 0 */","","/**"," * Creates an instance of [`Must`](#Must) with the current object for asserting"," * and calling matchers on."," *"," * This property is non-enumerable just like built-in properties, so"," * it'll never interfere with any regular usage of objects."," *"," * Please note that JavaScript does not allow method calls on `null` or"," * `undefined`, so you'll sometimes have to call [`Must`](#Must) on them by"," * hand.  Assigning `require(\"must\")` to `expect` or `demand` works well with"," * those cases."," *"," * @example"," * true.must.be.true()"," * [].must.be.empty()"," *"," * @property must"," * @for Object"," * @on prototype"," */","Object.defineProperty(Object.prototype, \"must\", {","  get: function() { \"use strict\"; return new Must(this) },","","  set: function(value) {","    Object.defineProperty(this, \"must\", {","      value: value,","      configurable: true,","      enumrable: true,","      writable: true","    })","  },","","  // Without configurable, can't redefine it when reloading this file, e.g.","  configurable: true","})",""],"l":{"1":1,"24":1,"25":3,"28":4}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/must.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/must.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":3,"22":0,"23":3,"24":3,"25":0,"26":1,"27":0,"28":1,"29":1,"30":1,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":0,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":1,"77":0,"78":0,"79":1,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":1,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":1,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":1,"133":1,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":1,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":1,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":1,"202":0,"203":0,"204":0,"205":1,"206":1,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":1,"220":0,"221":1,"222":1,"223":1,"224":0,"225":1,"226":1,"227":0,"228":1,"229":1,"230":1,"231":0,"232":1,"233":1,"234":0,"235":0,"236":1,"237":0,"238":1,"239":1,"240":1,"241":0,"242":1,"243":0,"244":0,"245":1,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":1,"284":0,"285":0,"286":1,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":1,"301":0,"302":1,"303":0,"304":1,"305":0,"306":1,"307":2},"b":{"1":[0,3],"2":[0,3],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0,0],"63":[0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0],"75":[0,0],"76":[0,0],"77":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":2},"fnMap":{"1":{"name":"Must","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":34},"end":{"line":63,"column":45}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":35},"end":{"line":101,"column":46}}},"4":{"name":"(anonymous_4)","line":128,"loc":{"start":{"line":128,"column":36},"end":{"line":128,"column":47}}},"5":{"name":"(anonymous_5)","line":161,"loc":{"start":{"line":161,"column":22},"end":{"line":161,"column":33}}},"6":{"name":"(anonymous_6)","line":174,"loc":{"start":{"line":174,"column":23},"end":{"line":174,"column":34}}},"7":{"name":"(anonymous_7)","line":186,"loc":{"start":{"line":186,"column":21},"end":{"line":186,"column":32}}},"8":{"name":"(anonymous_8)","line":206,"loc":{"start":{"line":206,"column":22},"end":{"line":206,"column":33}}},"9":{"name":"(anonymous_9)","line":226,"loc":{"start":{"line":226,"column":27},"end":{"line":226,"column":38}}},"10":{"name":"(anonymous_10)","line":239,"loc":{"start":{"line":239,"column":25},"end":{"line":239,"column":36}}},"11":{"name":"(anonymous_11)","line":252,"loc":{"start":{"line":252,"column":24},"end":{"line":252,"column":35}}},"12":{"name":"(anonymous_12)","line":265,"loc":{"start":{"line":265,"column":24},"end":{"line":265,"column":35}}},"13":{"name":"(anonymous_13)","line":277,"loc":{"start":{"line":277,"column":24},"end":{"line":277,"column":35}}},"14":{"name":"(anonymous_14)","line":289,"loc":{"start":{"line":289,"column":22},"end":{"line":289,"column":33}}},"15":{"name":"(anonymous_15)","line":301,"loc":{"start":{"line":301,"column":24},"end":{"line":301,"column":35}}},"16":{"name":"(anonymous_16)","line":313,"loc":{"start":{"line":313,"column":23},"end":{"line":313,"column":34}}},"17":{"name":"(anonymous_17)","line":325,"loc":{"start":{"line":325,"column":26},"end":{"line":325,"column":37}}},"18":{"name":"(anonymous_18)","line":337,"loc":{"start":{"line":337,"column":24},"end":{"line":337,"column":35}}},"19":{"name":"(anonymous_19)","line":354,"loc":{"start":{"line":354,"column":24},"end":{"line":354,"column":35}}},"20":{"name":"(anonymous_20)","line":370,"loc":{"start":{"line":370,"column":23},"end":{"line":370,"column":34}}},"21":{"name":"(anonymous_21)","line":384,"loc":{"start":{"line":384,"column":23},"end":{"line":384,"column":34}}},"22":{"name":"(anonymous_22)","line":398,"loc":{"start":{"line":398,"column":28},"end":{"line":398,"column":47}}},"23":{"name":"instanceofMessage","line":403,"loc":{"start":{"line":403,"column":0},"end":{"line":403,"column":37}}},"24":{"name":"(anonymous_24)","line":426,"loc":{"start":{"line":426,"column":23},"end":{"line":426,"column":34}}},"25":{"name":"(anonymous_25)","line":445,"loc":{"start":{"line":445,"column":25},"end":{"line":445,"column":44}}},"26":{"name":"(anonymous_26)","line":466,"loc":{"start":{"line":466,"column":23},"end":{"line":466,"column":42}}},"27":{"name":"(anonymous_27)","line":499,"loc":{"start":{"line":499,"column":23},"end":{"line":499,"column":48}}},"28":{"name":"(anonymous_28)","line":555,"loc":{"start":{"line":555,"column":21},"end":{"line":555,"column":40}}},"29":{"name":"(anonymous_29)","line":575,"loc":{"start":{"line":575,"column":25},"end":{"line":575,"column":44}}},"30":{"name":"(anonymous_30)","line":606,"loc":{"start":{"line":606,"column":31},"end":{"line":606,"column":50}}},"31":{"name":"isPermutationOf","line":611,"loc":{"start":{"line":611,"column":0},"end":{"line":611,"column":43}}},"32":{"name":"(anonymous_32)","line":637,"loc":{"start":{"line":637,"column":23},"end":{"line":637,"column":42}}},"33":{"name":"(anonymous_33)","line":700,"loc":{"start":{"line":700,"column":23},"end":{"line":700,"column":48}}},"34":{"name":"(anonymous_34)","line":723,"loc":{"start":{"line":723,"column":24},"end":{"line":723,"column":43}}},"35":{"name":"(anonymous_35)","line":736,"loc":{"start":{"line":736,"column":24},"end":{"line":736,"column":35}}},"36":{"name":"(anonymous_36)","line":755,"loc":{"start":{"line":755,"column":28},"end":{"line":755,"column":44}}},"37":{"name":"(anonymous_37)","line":782,"loc":{"start":{"line":782,"column":31},"end":{"line":782,"column":47}}},"38":{"name":"(anonymous_38)","line":809,"loc":{"start":{"line":809,"column":26},"end":{"line":809,"column":55}}},"39":{"name":"(anonymous_39)","line":832,"loc":{"start":{"line":832,"column":29},"end":{"line":832,"column":58}}},"40":{"name":"(anonymous_40)","line":862,"loc":{"start":{"line":862,"column":22},"end":{"line":862,"column":41}}},"41":{"name":"(anonymous_41)","line":881,"loc":{"start":{"line":881,"column":25},"end":{"line":881,"column":44}}},"42":{"name":"(anonymous_42)","line":903,"loc":{"start":{"line":903,"column":28},"end":{"line":903,"column":47}}},"43":{"name":"(anonymous_43)","line":931,"loc":{"start":{"line":931,"column":31},"end":{"line":931,"column":50}}},"44":{"name":"isEnumerable","line":938,"loc":{"start":{"line":938,"column":0},"end":{"line":938,"column":33}}},"45":{"name":"(anonymous_45)","line":962,"loc":{"start":{"line":962,"column":23},"end":{"line":962,"column":42}}},"46":{"name":"(anonymous_46)","line":1001,"loc":{"start":{"line":1001,"column":22},"end":{"line":1001,"column":41}}},"47":{"name":"(anonymous_47)","line":1022,"loc":{"start":{"line":1022,"column":23},"end":{"line":1022,"column":42}}},"48":{"name":"(anonymous_48)","line":1062,"loc":{"start":{"line":1062,"column":23},"end":{"line":1062,"column":42}}},"49":{"name":"(anonymous_49)","line":1086,"loc":{"start":{"line":1086,"column":25},"end":{"line":1086,"column":46}}},"50":{"name":"(anonymous_50)","line":1087,"loc":{"start":{"line":1087,"column":58},"end":{"line":1087,"column":69}}},"51":{"name":"(anonymous_51)","line":1124,"loc":{"start":{"line":1124,"column":40},"end":{"line":1124,"column":51}}},"52":{"name":"(anonymous_52)","line":1182,"loc":{"start":{"line":1182,"column":39},"end":{"line":1182,"column":50}}},"53":{"name":"(anonymous_53)","line":1195,"loc":{"start":{"line":1195,"column":27},"end":{"line":1195,"column":46}}},"54":{"name":"assert","line":1211,"loc":{"start":{"line":1211,"column":24},"end":{"line":1211,"column":59}}},"55":{"name":"eql","line":1233,"loc":{"start":{"line":1233,"column":0},"end":{"line":1233,"column":19}}},"56":{"name":"getConstructorOf","line":1254,"loc":{"start":{"line":1254,"column":0},"end":{"line":1254,"column":31}}},"57":{"name":"hasValueOf","line":1259,"loc":{"start":{"line":1259,"column":0},"end":{"line":1259,"column":25}}},"58":{"name":"kindofPlain","line":1264,"loc":{"start":{"line":1264,"column":0},"end":{"line":1264,"column":26}}},"59":{"name":"isError","line":1270,"loc":{"start":{"line":1270,"column":0},"end":{"line":1270,"column":45}}},"60":{"name":"messageFromError","line":1281,"loc":{"start":{"line":1281,"column":0},"end":{"line":1281,"column":31}}},"61":{"name":"isFn","line":1286,"loc":{"start":{"line":1286,"column":0},"end":{"line":1286,"column":18}}},"62":{"name":"isNumber","line":1287,"loc":{"start":{"line":1287,"column":0},"end":{"line":1287,"column":21}}},"63":{"name":"passthrough","line":1288,"loc":{"start":{"line":1288,"column":0},"end":{"line":1288,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"11":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":54}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":12}},"16":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"17":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"18":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}},"20":{"start":{"line":47,"column":0},"end":{"line":51,"column":1}},"21":{"start":{"line":48,"column":2},"end":{"line":48,"column":63}},"22":{"start":{"line":48,"column":31},"end":{"line":48,"column":63}},"23":{"start":{"line":49,"column":2},"end":{"line":49,"column":22}},"24":{"start":{"line":50,"column":2},"end":{"line":50,"column":45}},"25":{"start":{"line":50,"column":23},"end":{"line":50,"column":45}},"26":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"27":{"start":{"line":64,"column":2},"end":{"line":64,"column":37}},"28":{"start":{"line":77,"column":0},"end":{"line":77,"column":69}},"29":{"start":{"line":89,"column":0},"end":{"line":89,"column":47}},"30":{"start":{"line":101,"column":0},"end":{"line":103,"column":2}},"31":{"start":{"line":102,"column":2},"end":{"line":102,"column":32}},"32":{"start":{"line":114,"column":0},"end":{"line":114,"column":49}},"33":{"start":{"line":128,"column":0},"end":{"line":135,"column":2}},"34":{"start":{"line":132,"column":2},"end":{"line":132,"column":32}},"35":{"start":{"line":133,"column":2},"end":{"line":133,"column":32}},"36":{"start":{"line":134,"column":2},"end":{"line":134,"column":13}},"37":{"start":{"line":150,"column":0},"end":{"line":150,"column":47}},"38":{"start":{"line":161,"column":0},"end":{"line":163,"column":1}},"39":{"start":{"line":162,"column":2},"end":{"line":162,"column":59}},"40":{"start":{"line":174,"column":0},"end":{"line":176,"column":1}},"41":{"start":{"line":175,"column":2},"end":{"line":175,"column":61}},"42":{"start":{"line":186,"column":0},"end":{"line":188,"column":1}},"43":{"start":{"line":187,"column":2},"end":{"line":187,"column":65}},"44":{"start":{"line":206,"column":0},"end":{"line":208,"column":1}},"45":{"start":{"line":207,"column":2},"end":{"line":207,"column":59}},"46":{"start":{"line":226,"column":0},"end":{"line":228,"column":1}},"47":{"start":{"line":227,"column":2},"end":{"line":227,"column":69}},"48":{"start":{"line":239,"column":0},"end":{"line":241,"column":1}},"49":{"start":{"line":240,"column":2},"end":{"line":240,"column":62}},"50":{"start":{"line":252,"column":0},"end":{"line":254,"column":1}},"51":{"start":{"line":253,"column":2},"end":{"line":253,"column":60}},"52":{"start":{"line":265,"column":0},"end":{"line":267,"column":1}},"53":{"start":{"line":266,"column":2},"end":{"line":266,"column":60}},"54":{"start":{"line":277,"column":0},"end":{"line":279,"column":1}},"55":{"start":{"line":278,"column":2},"end":{"line":278,"column":60}},"56":{"start":{"line":289,"column":0},"end":{"line":291,"column":1}},"57":{"start":{"line":290,"column":2},"end":{"line":290,"column":57}},"58":{"start":{"line":301,"column":0},"end":{"line":303,"column":1}},"59":{"start":{"line":302,"column":2},"end":{"line":302,"column":73}},"60":{"start":{"line":313,"column":0},"end":{"line":315,"column":1}},"61":{"start":{"line":314,"column":2},"end":{"line":314,"column":56}},"62":{"start":{"line":325,"column":0},"end":{"line":327,"column":1}},"63":{"start":{"line":326,"column":2},"end":{"line":326,"column":64}},"64":{"start":{"line":337,"column":0},"end":{"line":340,"column":1}},"65":{"start":{"line":338,"column":2},"end":{"line":338,"column":56}},"66":{"start":{"line":339,"column":2},"end":{"line":339,"column":33}},"67":{"start":{"line":354,"column":0},"end":{"line":356,"column":1}},"68":{"start":{"line":355,"column":2},"end":{"line":355,"column":39}},"69":{"start":{"line":370,"column":0},"end":{"line":372,"column":1}},"70":{"start":{"line":371,"column":2},"end":{"line":371,"column":39}},"71":{"start":{"line":384,"column":0},"end":{"line":386,"column":1}},"72":{"start":{"line":385,"column":2},"end":{"line":385,"column":43}},"73":{"start":{"line":398,"column":0},"end":{"line":401,"column":1}},"74":{"start":{"line":399,"column":2},"end":{"line":399,"column":42}},"75":{"start":{"line":400,"column":2},"end":{"line":400,"column":79}},"76":{"start":{"line":403,"column":0},"end":{"line":406,"column":1}},"77":{"start":{"line":404,"column":2},"end":{"line":404,"column":73}},"78":{"start":{"line":405,"column":2},"end":{"line":405,"column":36}},"79":{"start":{"line":412,"column":0},"end":{"line":412,"column":53}},"80":{"start":{"line":426,"column":0},"end":{"line":434,"column":1}},"81":{"start":{"line":427,"column":2},"end":{"line":427,"column":16}},"82":{"start":{"line":428,"column":2},"end":{"line":431,"column":31}},"83":{"start":{"line":429,"column":4},"end":{"line":429,"column":33}},"84":{"start":{"line":430,"column":7},"end":{"line":431,"column":31}},"85":{"start":{"line":431,"column":4},"end":{"line":431,"column":31}},"86":{"start":{"line":433,"column":2},"end":{"line":433,"column":29}},"87":{"start":{"line":445,"column":0},"end":{"line":447,"column":1}},"88":{"start":{"line":446,"column":2},"end":{"line":446,"column":80}},"89":{"start":{"line":466,"column":0},"end":{"line":468,"column":1}},"90":{"start":{"line":467,"column":2},"end":{"line":467,"column":70}},"91":{"start":{"line":499,"column":0},"end":{"line":507,"column":1}},"92":{"start":{"line":500,"column":2},"end":{"line":500,"column":43}},"93":{"start":{"line":500,"column":29},"end":{"line":500,"column":43}},"94":{"start":{"line":501,"column":2},"end":{"line":501,"column":76}},"95":{"start":{"line":501,"column":46},"end":{"line":501,"column":62}},"96":{"start":{"line":501,"column":63},"end":{"line":501,"column":75}},"97":{"start":{"line":503,"column":2},"end":{"line":503,"column":56}},"98":{"start":{"line":504,"column":2},"end":{"line":504,"column":69}},"99":{"start":{"line":505,"column":2},"end":{"line":505,"column":59}},"100":{"start":{"line":506,"column":2},"end":{"line":506,"column":28}},"101":{"start":{"line":520,"column":0},"end":{"line":520,"column":70}},"102":{"start":{"line":555,"column":0},"end":{"line":558,"column":1}},"103":{"start":{"line":556,"column":2},"end":{"line":556,"column":47}},"104":{"start":{"line":557,"column":2},"end":{"line":557,"column":75}},"105":{"start":{"line":575,"column":0},"end":{"line":584,"column":1}},"106":{"start":{"line":576,"column":2},"end":{"line":576,"column":11}},"107":{"start":{"line":577,"column":2},"end":{"line":581,"column":64}},"108":{"start":{"line":578,"column":4},"end":{"line":578,"column":46}},"109":{"start":{"line":580,"column":4},"end":{"line":581,"column":64}},"110":{"start":{"line":581,"column":6},"end":{"line":581,"column":64}},"111":{"start":{"line":581,"column":43},"end":{"line":581,"column":56}},"112":{"start":{"line":581,"column":57},"end":{"line":581,"column":63}},"113":{"start":{"line":583,"column":2},"end":{"line":583,"column":53}},"114":{"start":{"line":590,"column":0},"end":{"line":590,"column":47}},"115":{"start":{"line":606,"column":0},"end":{"line":609,"column":1}},"116":{"start":{"line":607,"column":2},"end":{"line":607,"column":49}},"117":{"start":{"line":608,"column":2},"end":{"line":608,"column":78}},"118":{"start":{"line":611,"column":0},"end":{"line":622,"column":1}},"119":{"start":{"line":612,"column":2},"end":{"line":612,"column":70}},"120":{"start":{"line":612,"column":58},"end":{"line":612,"column":70}},"121":{"start":{"line":613,"column":2},"end":{"line":613,"column":53}},"122":{"start":{"line":613,"column":41},"end":{"line":613,"column":53}},"123":{"start":{"line":615,"column":2},"end":{"line":615,"column":32}},"124":{"start":{"line":616,"column":2},"end":{"line":616,"column":36}},"125":{"start":{"line":617,"column":2},"end":{"line":619,"column":3}},"126":{"start":{"line":618,"column":4},"end":{"line":618,"column":47}},"127":{"start":{"line":618,"column":35},"end":{"line":618,"column":47}},"128":{"start":{"line":621,"column":2},"end":{"line":621,"column":13}},"129":{"start":{"line":637,"column":0},"end":{"line":640,"column":1}},"130":{"start":{"line":638,"column":2},"end":{"line":638,"column":75}},"131":{"start":{"line":639,"column":2},"end":{"line":639,"column":68}},"132":{"start":{"line":651,"column":0},"end":{"line":651,"column":49}},"133":{"start":{"line":662,"column":0},"end":{"line":662,"column":48}},"134":{"start":{"line":700,"column":0},"end":{"line":711,"column":1}},"135":{"start":{"line":701,"column":2},"end":{"line":701,"column":43}},"136":{"start":{"line":701,"column":29},"end":{"line":701,"column":43}},"137":{"start":{"line":702,"column":2},"end":{"line":702,"column":76}},"138":{"start":{"line":702,"column":46},"end":{"line":702,"column":62}},"139":{"start":{"line":702,"column":63},"end":{"line":702,"column":75}},"140":{"start":{"line":704,"column":2},"end":{"line":704,"column":27}},"141":{"start":{"line":705,"column":2},"end":{"line":705,"column":73}},"142":{"start":{"line":705,"column":8},"end":{"line":705,"column":31}},"143":{"start":{"line":705,"column":46},"end":{"line":705,"column":56}},"144":{"start":{"line":705,"column":57},"end":{"line":705,"column":72}},"145":{"start":{"line":706,"column":2},"end":{"line":706,"column":47}},"146":{"start":{"line":708,"column":2},"end":{"line":708,"column":32}},"147":{"start":{"line":709,"column":2},"end":{"line":709,"column":48}},"148":{"start":{"line":709,"column":24},"end":{"line":709,"column":48}},"149":{"start":{"line":710,"column":2},"end":{"line":710,"column":32}},"150":{"start":{"line":723,"column":0},"end":{"line":726,"column":1}},"151":{"start":{"line":724,"column":2},"end":{"line":724,"column":41}},"152":{"start":{"line":725,"column":2},"end":{"line":725,"column":57}},"153":{"start":{"line":736,"column":0},"end":{"line":738,"column":1}},"154":{"start":{"line":737,"column":2},"end":{"line":737,"column":56}},"155":{"start":{"line":755,"column":0},"end":{"line":765,"column":1}},"156":{"start":{"line":756,"column":2},"end":{"line":756,"column":23}},"157":{"start":{"line":757,"column":2},"end":{"line":757,"column":30}},"158":{"start":{"line":759,"column":2},"end":{"line":762,"column":3}},"159":{"start":{"line":759,"column":10},"end":{"line":762,"column":3}},"160":{"start":{"line":760,"column":4},"end":{"line":760,"column":46}},"161":{"start":{"line":761,"column":4},"end":{"line":761,"column":18}},"162":{"start":{"line":761,"column":13},"end":{"line":761,"column":18}},"163":{"start":{"line":764,"column":2},"end":{"line":764,"column":71}},"164":{"start":{"line":782,"column":0},"end":{"line":792,"column":1}},"165":{"start":{"line":783,"column":2},"end":{"line":783,"column":23}},"166":{"start":{"line":784,"column":2},"end":{"line":784,"column":30}},"167":{"start":{"line":786,"column":2},"end":{"line":789,"column":3}},"168":{"start":{"line":786,"column":10},"end":{"line":789,"column":3}},"169":{"start":{"line":787,"column":4},"end":{"line":787,"column":66}},"170":{"start":{"line":788,"column":4},"end":{"line":788,"column":18}},"171":{"start":{"line":788,"column":13},"end":{"line":788,"column":18}},"172":{"start":{"line":791,"column":2},"end":{"line":791,"column":75}},"173":{"start":{"line":809,"column":0},"end":{"line":816,"column":1}},"174":{"start":{"line":810,"column":2},"end":{"line":810,"column":65}},"175":{"start":{"line":811,"column":2},"end":{"line":811,"column":73}},"176":{"start":{"line":811,"column":34},"end":{"line":811,"column":73}},"177":{"start":{"line":813,"column":2},"end":{"line":813,"column":54}},"178":{"start":{"line":814,"column":2},"end":{"line":814,"column":79}},"179":{"start":{"line":814,"column":30},"end":{"line":814,"column":49}},"180":{"start":{"line":814,"column":50},"end":{"line":814,"column":78}},"181":{"start":{"line":815,"column":2},"end":{"line":815,"column":28}},"182":{"start":{"line":832,"column":0},"end":{"line":840,"column":1}},"183":{"start":{"line":833,"column":2},"end":{"line":833,"column":30}},"184":{"start":{"line":834,"column":2},"end":{"line":834,"column":42}},"185":{"start":{"line":835,"column":2},"end":{"line":835,"column":73}},"186":{"start":{"line":835,"column":34},"end":{"line":835,"column":73}},"187":{"start":{"line":837,"column":2},"end":{"line":837,"column":58}},"188":{"start":{"line":838,"column":2},"end":{"line":838,"column":79}},"189":{"start":{"line":838,"column":30},"end":{"line":838,"column":49}},"190":{"start":{"line":838,"column":50},"end":{"line":838,"column":78}},"191":{"start":{"line":839,"column":2},"end":{"line":839,"column":28}},"192":{"start":{"line":846,"column":0},"end":{"line":846,"column":47}},"193":{"start":{"line":862,"column":0},"end":{"line":866,"column":1}},"194":{"start":{"line":863,"column":2},"end":{"line":863,"column":30}},"195":{"start":{"line":864,"column":2},"end":{"line":864,"column":67}},"196":{"start":{"line":865,"column":2},"end":{"line":865,"column":52}},"197":{"start":{"line":881,"column":0},"end":{"line":885,"column":1}},"198":{"start":{"line":882,"column":2},"end":{"line":882,"column":30}},"199":{"start":{"line":883,"column":2},"end":{"line":883,"column":72}},"200":{"start":{"line":884,"column":2},"end":{"line":884,"column":56}},"201":{"start":{"line":903,"column":0},"end":{"line":907,"column":1}},"202":{"start":{"line":904,"column":2},"end":{"line":904,"column":30}},"203":{"start":{"line":905,"column":2},"end":{"line":905,"column":56}},"204":{"start":{"line":906,"column":2},"end":{"line":906,"column":66}},"205":{"start":{"line":913,"column":0},"end":{"line":913,"column":61}},"206":{"start":{"line":931,"column":0},"end":{"line":936,"column":1}},"207":{"start":{"line":932,"column":2},"end":{"line":932,"column":30}},"208":{"start":{"line":933,"column":2},"end":{"line":933,"column":44}},"209":{"start":{"line":934,"column":2},"end":{"line":934,"column":57}},"210":{"start":{"line":935,"column":2},"end":{"line":935,"column":69}},"211":{"start":{"line":938,"column":0},"end":{"line":943,"column":1}},"212":{"start":{"line":940,"column":2},"end":{"line":940,"column":72}},"213":{"start":{"line":940,"column":61},"end":{"line":940,"column":72}},"214":{"start":{"line":941,"column":2},"end":{"line":941,"column":51}},"215":{"start":{"line":941,"column":23},"end":{"line":941,"column":51}},"216":{"start":{"line":941,"column":40},"end":{"line":941,"column":51}},"217":{"start":{"line":942,"column":2},"end":{"line":942,"column":14}},"218":{"start":{"line":949,"column":0},"end":{"line":949,"column":67}},"219":{"start":{"line":962,"column":0},"end":{"line":964,"column":1}},"220":{"start":{"line":963,"column":2},"end":{"line":963,"column":71}},"221":{"start":{"line":970,"column":0},"end":{"line":970,"column":40}},"222":{"start":{"line":987,"column":0},"end":{"line":987,"column":44}},"223":{"start":{"line":1001,"column":0},"end":{"line":1003,"column":1}},"224":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":74}},"225":{"start":{"line":1009,"column":0},"end":{"line":1009,"column":40}},"226":{"start":{"line":1022,"column":0},"end":{"line":1024,"column":1}},"227":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":71}},"228":{"start":{"line":1030,"column":0},"end":{"line":1030,"column":40}},"229":{"start":{"line":1047,"column":0},"end":{"line":1047,"column":43}},"230":{"start":{"line":1062,"column":0},"end":{"line":1064,"column":1}},"231":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":75}},"232":{"start":{"line":1070,"column":0},"end":{"line":1070,"column":41}},"233":{"start":{"line":1086,"column":0},"end":{"line":1090,"column":1}},"234":{"start":{"line":1087,"column":2},"end":{"line":1089,"column":4}},"235":{"start":{"line":1088,"column":4},"end":{"line":1088,"column":70}},"236":{"start":{"line":1124,"column":0},"end":{"line":1126,"column":2}},"237":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":25}},"238":{"start":{"line":1136,"column":0},"end":{"line":1136,"column":77}},"239":{"start":{"line":1146,"column":0},"end":{"line":1147,"column":53}},"240":{"start":{"line":1182,"column":0},"end":{"line":1184,"column":2}},"241":{"start":{"line":1183,"column":2},"end":{"line":1183,"column":25}},"242":{"start":{"line":1195,"column":0},"end":{"line":1198,"column":1}},"243":{"start":{"line":1196,"column":2},"end":{"line":1196,"column":44}},"244":{"start":{"line":1197,"column":2},"end":{"line":1197,"column":53}},"245":{"start":{"line":1209,"column":0},"end":{"line":1209,"column":49}},"246":{"start":{"line":1211,"column":0},"end":{"line":1229,"column":1}},"247":{"start":{"line":1212,"column":2},"end":{"line":1212,"column":39}},"248":{"start":{"line":1212,"column":33},"end":{"line":1212,"column":39}},"249":{"start":{"line":1214,"column":2},"end":{"line":1214,"column":40}},"250":{"start":{"line":1215,"column":2},"end":{"line":1215,"column":52}},"251":{"start":{"line":1215,"column":27},"end":{"line":1215,"column":52}},"252":{"start":{"line":1217,"column":2},"end":{"line":1221,"column":3}},"253":{"start":{"line":1219,"column":4},"end":{"line":1220,"column":39}},"254":{"start":{"line":1219,"column":10},"end":{"line":1219,"column":38}},"255":{"start":{"line":1220,"column":17},"end":{"line":1220,"column":38}},"256":{"start":{"line":1223,"column":2},"end":{"line":1223,"column":77}},"257":{"start":{"line":1224,"column":2},"end":{"line":1225,"column":80}},"258":{"start":{"line":1224,"column":36},"end":{"line":1224,"column":61}},"259":{"start":{"line":1225,"column":7},"end":{"line":1225,"column":80}},"260":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":59}},"261":{"start":{"line":1226,"column":28},"end":{"line":1226,"column":59}},"262":{"start":{"line":1228,"column":2},"end":{"line":1228,"column":37}},"263":{"start":{"line":1231,"column":0},"end":{"line":1231,"column":68}},"264":{"start":{"line":1233,"column":0},"end":{"line":1252,"column":1}},"265":{"start":{"line":1234,"column":2},"end":{"line":1234,"column":29}},"266":{"start":{"line":1234,"column":18},"end":{"line":1234,"column":29}},"267":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":27}},"268":{"start":{"line":1237,"column":2},"end":{"line":1237,"column":43}},"269":{"start":{"line":1237,"column":31},"end":{"line":1237,"column":43}},"270":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":71}},"271":{"start":{"line":1238,"column":60},"end":{"line":1238,"column":71}},"272":{"start":{"line":1240,"column":2},"end":{"line":1251,"column":3}},"273":{"start":{"line":1243,"column":6},"end":{"line":1243,"column":17}},"274":{"start":{"line":1246,"column":6},"end":{"line":1246,"column":67}},"275":{"start":{"line":1246,"column":55},"end":{"line":1246,"column":67}},"276":{"start":{"line":1247,"column":6},"end":{"line":1247,"column":54}},"277":{"start":{"line":1247,"column":42},"end":{"line":1247,"column":54}},"278":{"start":{"line":1248,"column":6},"end":{"line":1248,"column":17}},"279":{"start":{"line":1250,"column":13},"end":{"line":1250,"column":25}},"280":{"start":{"line":1254,"column":0},"end":{"line":1257,"column":1}},"281":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":44}},"282":{"start":{"line":1256,"column":2},"end":{"line":1256,"column":63}},"283":{"start":{"line":1259,"column":0},"end":{"line":1262,"column":1}},"284":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":27}},"285":{"start":{"line":1261,"column":2},"end":{"line":1261,"column":78}},"286":{"start":{"line":1264,"column":0},"end":{"line":1268,"column":1}},"287":{"start":{"line":1265,"column":2},"end":{"line":1265,"column":24}},"288":{"start":{"line":1266,"column":2},"end":{"line":1266,"column":63}},"289":{"start":{"line":1266,"column":49},"end":{"line":1266,"column":63}},"290":{"start":{"line":1267,"column":2},"end":{"line":1267,"column":13}},"291":{"start":{"line":1270,"column":0},"end":{"line":1279,"column":1}},"292":{"start":{"line":1271,"column":2},"end":{"line":1271,"column":72}},"293":{"start":{"line":1271,"column":60},"end":{"line":1271,"column":72}},"294":{"start":{"line":1272,"column":2},"end":{"line":1272,"column":35}},"295":{"start":{"line":1272,"column":24},"end":{"line":1272,"column":35}},"296":{"start":{"line":1274,"column":2},"end":{"line":1278,"column":3}},"297":{"start":{"line":1275,"column":19},"end":{"line":1275,"column":60}},"298":{"start":{"line":1276,"column":19},"end":{"line":1276,"column":62}},"299":{"start":{"line":1277,"column":13},"end":{"line":1277,"column":36}},"300":{"start":{"line":1281,"column":0},"end":{"line":1284,"column":1}},"301":{"start":{"line":1283,"column":2},"end":{"line":1283,"column":66}},"302":{"start":{"line":1286,"column":0},"end":{"line":1286,"column":53}},"303":{"start":{"line":1286,"column":20},"end":{"line":1286,"column":52}},"304":{"start":{"line":1287,"column":0},"end":{"line":1287,"column":76}},"305":{"start":{"line":1287,"column":23},"end":{"line":1287,"column":75}},"306":{"start":{"line":1288,"column":0},"end":{"line":1288,"column":38}},"307":{"start":{"line":1288,"column":25},"end":{"line":1288,"column":37}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":11},"end":{"line":338,"column":22}},{"start":{"line":338,"column":26},"end":{"line":338,"column":56}}]},"4":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":13},"end":{"line":404,"column":33}},{"start":{"line":404,"column":37},"end":{"line":404,"column":50}},{"start":{"line":404,"column":54},"end":{"line":404,"column":73}}]},"5":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":2},"end":{"line":428,"column":2}},{"start":{"line":428,"column":2},"end":{"line":428,"column":2}}]},"6":{"line":428,"type":"binary-expr","locations":[{"start":{"line":428,"column":6},"end":{"line":428,"column":37}},{"start":{"line":428,"column":41},"end":{"line":428,"column":67}}]},"7":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":7},"end":{"line":430,"column":7}},{"start":{"line":430,"column":7},"end":{"line":430,"column":7}}]},"8":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":11},"end":{"line":430,"column":41}},{"start":{"line":430,"column":45},"end":{"line":430,"column":77}}]},"9":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":2}},{"start":{"line":500,"column":2},"end":{"line":500,"column":2}}]},"10":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"11":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":6},"end":{"line":501,"column":27}},{"start":{"line":501,"column":31},"end":{"line":501,"column":42}}]},"12":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":32},"end":{"line":503,"column":36}},{"start":{"line":503,"column":40},"end":{"line":503,"column":45}}]},"13":{"line":504,"type":"cond-expr","locations":[{"start":{"line":504,"column":31},"end":{"line":504,"column":53}},{"start":{"line":504,"column":56},"end":{"line":504,"column":69}}]},"14":{"line":505,"type":"cond-expr","locations":[{"start":{"line":505,"column":32},"end":{"line":505,"column":52}},{"start":{"line":505,"column":55},"end":{"line":505,"column":59}}]},"15":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":2},"end":{"line":577,"column":2}},{"start":{"line":577,"column":2},"end":{"line":577,"column":2}}]},"16":{"line":577,"type":"binary-expr","locations":[{"start":{"line":577,"column":6},"end":{"line":577,"column":37}},{"start":{"line":577,"column":41},"end":{"line":577,"column":67}}]},"17":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":6},"end":{"line":581,"column":6}},{"start":{"line":581,"column":6},"end":{"line":581,"column":6}}]},"18":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":2},"end":{"line":612,"column":2}},{"start":{"line":612,"column":2},"end":{"line":612,"column":2}}]},"19":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":6},"end":{"line":612,"column":28}},{"start":{"line":612,"column":32},"end":{"line":612,"column":56}}]},"20":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":2},"end":{"line":613,"column":2}},{"start":{"line":613,"column":2},"end":{"line":613,"column":2}}]},"21":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"22":{"line":638,"type":"cond-expr","locations":[{"start":{"line":638,"column":44},"end":{"line":638,"column":52}},{"start":{"line":638,"column":55},"end":{"line":638,"column":75}}]},"23":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":2},"end":{"line":701,"column":2}},{"start":{"line":701,"column":2},"end":{"line":701,"column":2}}]},"24":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":2},"end":{"line":702,"column":2}},{"start":{"line":702,"column":2},"end":{"line":702,"column":2}}]},"25":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":6},"end":{"line":702,"column":27}},{"start":{"line":702,"column":31},"end":{"line":702,"column":42}}]},"26":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":7},"end":{"line":706,"column":9}},{"start":{"line":706,"column":13},"end":{"line":706,"column":47}}]},"27":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":2},"end":{"line":709,"column":2}},{"start":{"line":709,"column":2},"end":{"line":709,"column":2}}]},"28":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":2},"end":{"line":759,"column":2}},{"start":{"line":759,"column":2},"end":{"line":759,"column":2}}]},"29":{"line":760,"type":"binary-expr","locations":[{"start":{"line":760,"column":9},"end":{"line":760,"column":19}},{"start":{"line":760,"column":23},"end":{"line":760,"column":46}}]},"30":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":761,"column":4}},{"start":{"line":761,"column":4},"end":{"line":761,"column":4}}]},"31":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":2},"end":{"line":786,"column":2}},{"start":{"line":786,"column":2},"end":{"line":786,"column":2}}]},"32":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":9},"end":{"line":787,"column":19}},{"start":{"line":787,"column":23},"end":{"line":787,"column":39}},{"start":{"line":787,"column":43},"end":{"line":787,"column":66}}]},"33":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":4},"end":{"line":788,"column":4}},{"start":{"line":788,"column":4},"end":{"line":788,"column":4}}]},"34":{"line":810,"type":"binary-expr","locations":[{"start":{"line":810,"column":11},"end":{"line":810,"column":30}},{"start":{"line":810,"column":34},"end":{"line":810,"column":65}}]},"35":{"line":811,"type":"if","locations":[{"start":{"line":811,"column":2},"end":{"line":811,"column":2}},{"start":{"line":811,"column":2},"end":{"line":811,"column":2}}]},"36":{"line":811,"type":"binary-expr","locations":[{"start":{"line":811,"column":6},"end":{"line":811,"column":8}},{"start":{"line":811,"column":12},"end":{"line":811,"column":32}}]},"37":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":2},"end":{"line":814,"column":2}},{"start":{"line":814,"column":2},"end":{"line":814,"column":2}}]},"38":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":7},"end":{"line":834,"column":9}},{"start":{"line":834,"column":13},"end":{"line":834,"column":42}}]},"39":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":2},"end":{"line":835,"column":2}},{"start":{"line":835,"column":2},"end":{"line":835,"column":2}}]},"40":{"line":835,"type":"binary-expr","locations":[{"start":{"line":835,"column":6},"end":{"line":835,"column":8}},{"start":{"line":835,"column":12},"end":{"line":835,"column":32}}]},"41":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":2},"end":{"line":838,"column":2}},{"start":{"line":838,"column":2},"end":{"line":838,"column":2}}]},"42":{"line":864,"type":"binary-expr","locations":[{"start":{"line":864,"column":7},"end":{"line":864,"column":9}},{"start":{"line":864,"column":13},"end":{"line":864,"column":67}}]},"43":{"line":883,"type":"binary-expr","locations":[{"start":{"line":883,"column":7},"end":{"line":883,"column":9}},{"start":{"line":883,"column":13},"end":{"line":883,"column":72}}]},"44":{"line":905,"type":"binary-expr","locations":[{"start":{"line":905,"column":7},"end":{"line":905,"column":9}},{"start":{"line":905,"column":13},"end":{"line":905,"column":56}}]},"45":{"line":933,"type":"binary-expr","locations":[{"start":{"line":933,"column":7},"end":{"line":933,"column":9}},{"start":{"line":933,"column":13},"end":{"line":933,"column":44}}]},"46":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":7},"end":{"line":934,"column":9}},{"start":{"line":934,"column":13},"end":{"line":934,"column":57}}]},"47":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":2},"end":{"line":940,"column":2}},{"start":{"line":940,"column":2},"end":{"line":940,"column":2}}]},"48":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":23},"end":{"line":941,"column":23}},{"start":{"line":941,"column":23},"end":{"line":941,"column":23}}]},"49":{"line":1087,"type":"binary-expr","locations":[{"start":{"line":1087,"column":14},"end":{"line":1087,"column":34}},{"start":{"line":1087,"column":38},"end":{"line":1087,"column":56}}]},"50":{"line":1212,"type":"if","locations":[{"start":{"line":1212,"column":2},"end":{"line":1212,"column":2}},{"start":{"line":1212,"column":2},"end":{"line":1212,"column":2}}]},"51":{"line":1212,"type":"cond-expr","locations":[{"start":{"line":1212,"column":23},"end":{"line":1212,"column":25}},{"start":{"line":1212,"column":28},"end":{"line":1212,"column":31}}]},"52":{"line":1214,"type":"cond-expr","locations":[{"start":{"line":1214,"column":16},"end":{"line":1214,"column":35}},{"start":{"line":1214,"column":38},"end":{"line":1214,"column":40}}]},"53":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":2},"end":{"line":1215,"column":2}},{"start":{"line":1215,"column":2},"end":{"line":1215,"column":2}}]},"54":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":2},"end":{"line":1217,"column":2}},{"start":{"line":1217,"column":2},"end":{"line":1217,"column":2}}]},"55":{"line":1223,"type":"cond-expr","locations":[{"start":{"line":1223,"column":65},"end":{"line":1223,"column":71}},{"start":{"line":1223,"column":74},"end":{"line":1223,"column":76}}]},"56":{"line":1224,"type":"if","locations":[{"start":{"line":1224,"column":2},"end":{"line":1224,"column":2}},{"start":{"line":1224,"column":2},"end":{"line":1224,"column":2}}]},"57":{"line":1225,"type":"cond-expr","locations":[{"start":{"line":1225,"column":46},"end":{"line":1225,"column":74}},{"start":{"line":1225,"column":77},"end":{"line":1225,"column":79}}]},"58":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":2},"end":{"line":1226,"column":2}},{"start":{"line":1226,"column":2},"end":{"line":1226,"column":2}}]},"59":{"line":1234,"type":"if","locations":[{"start":{"line":1234,"column":2},"end":{"line":1234,"column":2}},{"start":{"line":1234,"column":2},"end":{"line":1234,"column":2}}]},"60":{"line":1237,"type":"if","locations":[{"start":{"line":1237,"column":2},"end":{"line":1237,"column":2}},{"start":{"line":1237,"column":2},"end":{"line":1237,"column":2}}]},"61":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":2},"end":{"line":1238,"column":2}},{"start":{"line":1238,"column":2},"end":{"line":1238,"column":2}}]},"62":{"line":1238,"type":"binary-expr","locations":[{"start":{"line":1238,"column":6},"end":{"line":1238,"column":17}},{"start":{"line":1238,"column":21},"end":{"line":1238,"column":32}},{"start":{"line":1238,"column":36},"end":{"line":1238,"column":45}},{"start":{"line":1238,"column":49},"end":{"line":1238,"column":58}}]},"63":{"line":1240,"type":"switch","locations":[{"start":{"line":1241,"column":4},"end":{"line":1241,"column":17}},{"start":{"line":1242,"column":4},"end":{"line":1243,"column":17}},{"start":{"line":1245,"column":4},"end":{"line":1248,"column":17}},{"start":{"line":1250,"column":4},"end":{"line":1250,"column":25}}]},"64":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":6},"end":{"line":1246,"column":6}},{"start":{"line":1246,"column":6},"end":{"line":1246,"column":6}}]},"65":{"line":1247,"type":"if","locations":[{"start":{"line":1247,"column":6},"end":{"line":1247,"column":6}},{"start":{"line":1247,"column":6},"end":{"line":1247,"column":6}}]},"66":{"line":1247,"type":"binary-expr","locations":[{"start":{"line":1247,"column":10},"end":{"line":1247,"column":23}},{"start":{"line":1247,"column":27},"end":{"line":1247,"column":40}}]},"67":{"line":1256,"type":"cond-expr","locations":[{"start":{"line":1256,"column":30},"end":{"line":1256,"column":39}},{"start":{"line":1256,"column":42},"end":{"line":1256,"column":63}}]},"68":{"line":1261,"type":"binary-expr","locations":[{"start":{"line":1261,"column":9},"end":{"line":1261,"column":38}},{"start":{"line":1261,"column":42},"end":{"line":1261,"column":78}}]},"69":{"line":1266,"type":"if","locations":[{"start":{"line":1266,"column":2},"end":{"line":1266,"column":2}},{"start":{"line":1266,"column":2},"end":{"line":1266,"column":2}}]},"70":{"line":1266,"type":"binary-expr","locations":[{"start":{"line":1266,"column":6},"end":{"line":1266,"column":23}},{"start":{"line":1266,"column":27},"end":{"line":1266,"column":47}}]},"71":{"line":1271,"type":"if","locations":[{"start":{"line":1271,"column":2},"end":{"line":1271,"column":2}},{"start":{"line":1271,"column":2},"end":{"line":1271,"column":2}}]},"72":{"line":1271,"type":"binary-expr","locations":[{"start":{"line":1271,"column":6},"end":{"line":1271,"column":25}},{"start":{"line":1271,"column":29},"end":{"line":1271,"column":58}}]},"73":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":2},"end":{"line":1272,"column":2}},{"start":{"line":1272,"column":2},"end":{"line":1272,"column":2}}]},"74":{"line":1274,"type":"switch","locations":[{"start":{"line":1275,"column":4},"end":{"line":1275,"column":60}},{"start":{"line":1276,"column":4},"end":{"line":1276,"column":62}},{"start":{"line":1277,"column":4},"end":{"line":1277,"column":36}}]},"75":{"line":1283,"type":"cond-expr","locations":[{"start":{"line":1283,"column":49},"end":{"line":1283,"column":52}},{"start":{"line":1283,"column":55},"end":{"line":1283,"column":66}}]},"76":{"line":1283,"type":"binary-expr","locations":[{"start":{"line":1283,"column":9},"end":{"line":1283,"column":20}},{"start":{"line":1283,"column":24},"end":{"line":1283,"column":46}}]},"77":{"line":1287,"type":"binary-expr","locations":[{"start":{"line":1287,"column":30},"end":{"line":1287,"column":51}},{"start":{"line":1287,"column":55},"end":{"line":1287,"column":74}}]}},"code":["var O = require(\"oolong\")","var AssertionError = require(\"./lib/assertion_error\")","var Resolvable = require(\"./lib/resolvable\")","var Rejectable = require(\"./lib/rejectable\")","var kindof = require(\"kindof\")","var egal = require(\"egal\")","var deepEgal = egal.deepEgal","var stringify = require(\"./lib\").stringify","var chain = require(\"./lib\").chain","var defineGetter = O.defineGetter","var lookupGetter = O.lookupGetter","var startsWith = require(\"./lib/es6\").startsWith","var endsWith = require(\"./lib/es6\").endsWith","var hasOwn = Function.call.bind(Object.hasOwnProperty)","var ANY = {}","exports = module.exports = Must","exports.AssertionError = AssertionError","exports.stringify = stringify","exports.chain = chain","","/**"," * The main class that wraps the asserted object and that you call matchers on."," *"," * To include a custom error message for failure cases, pass a string as the"," * second argument."," *"," * Most of the time you'll be using"," * [`Object.prototype.must`](#Object.prototype.must) to create this wrapper, but"," * occasionally you might want to assert `null`s or `undefined`s and in those"," * cases assigning `Must` to something like `expect` or `demand` works nicely."," *"," * @example"," * true.must.be.true()"," * [].must.be.empty()"," *"," * var expect = require(\"must\")"," * expect(null).to.be.null()"," *"," * var demand = require(\"must\")"," * demand(undefined, \"The undefined undefineds\").be.undefined()"," *"," * @class Must"," * @constructor"," * @param actual"," * @param [message]"," */","function Must(actual, message) {","  if (!(this instanceof Must)) return new Must(actual, message)","  this.actual = actual","  if (message != null) this.message = message","}","","/**","  * Can also be used a pass-through property for a fluent chain.","  *","  * @example","  * \"Hello\".must.be.a.string()","  * new Date().must.be.a(Date)","  *","  * @method a","  * @alias instanceof","  */","defineGetter(Must.prototype, \"a\", function() {","  return chain(this, this.instanceof)","})","","/**","  * Can also be used a pass-through property for a fluent chain.","  *","  * @example","  * [1, 2].must.be.an.array()","  * new AwesomeClass().must.be.an(AwesomeClass)","  *","  * @method an","  * @alias instanceof","  */","defineGetter(Must.prototype, \"an\", lookupGetter(Must.prototype, \"a\"))","","/**","  * Pass-through property for a fluent chain.","  *","  * @example","  * (42).must.be.at.most(69)","  * (1337).must.be.at.least(1337)","  *","  * @property at","  * @on prototype","  */","defineGetter(Must.prototype, \"at\", passthrough)","","/**","  * Can also be used as a pass-through property for a fluent chain.","  *","  * @example","  * true.must.be.true()","  * (42).must.be(42)","  *","  * @method be","  * @alias equal","  */","defineGetter(Must.prototype, \"be\", function() {","  return chain(this, this.equal)","})","","/**","  * Pass-through property for a fluent chain.","  *","  * @example","  * [1, 2].must.have.length(2)","  *","  * @property have","  * @on prototype","  */","defineGetter(Must.prototype, \"have\", passthrough)","","/**","  * Inverse the assertion.  ","  * Use it multiple times to create lots of fun!","  * `true.must.not.not.be.true()` :-)","  *","  * @example","  * true.must.not.be.true()","  * [].must.not.be.empty()","  *","  * @property not","  * @on prototype","  */","defineGetter(Must.prototype, \"not\", function() {","  // NOTE: Dear reader or plugin author, please don't depend on this property","  // name will remain as-is. If you really need to, let me know how you'd like","  // to use it. XO.","  var self = Object.create(this)","  self.negative = !self.negative","  return self","})","","/**","  * Pass-through property for a fluent chain.","  *","  * @example","  * var expect = require(\"must\")","  * expect(true).to.be.true()","  *","  * var wish = require(\"must\")","  * wish(life).to.be.truthy()","  *","  * @property to","  * @on prototype","  */","defineGetter(Must.prototype, \"to\", passthrough)","","/**"," * Assert object is `true`.  "," * A boxed boolean object (`new Boolean(true`) is _not_ considered true."," *"," * @example"," * true.must.be.true()"," *"," * @method true"," */","Must.prototype.true = function() {","  this.assert(this.actual === true, \"be\", {expected: true})","}","","/**"," * Assert object is `false`.  "," * A boxed boolean object (`new Boolean(false`) is _not_ considered false."," *"," * @example"," * false.must.be.false()"," * @method false"," *"," */","Must.prototype.false = function() {","  this.assert(this.actual === false, \"be\", {expected: false})","}","","/**"," * Assert object is `NaN`."," *"," * @example"," * NaN.must.be.nan()"," *"," * @method nan"," */","Must.prototype.nan = function() {","  this.assert(this.actual !== this.actual, \"be\", {expected: NaN})","}","","/**"," * Assert object is `null`."," *"," * Because JavaScript does not allow method calls on `null`, you'll have to"," * wrap an expected null with [`Must`](#Must). Assigning `require(\"must\")` to"," * `expect` or `demand` works well."," *"," * If you want to assert that an object's property is `null`, see"," * [`property`](#Must.prototype.property)."," *"," * @example"," * var demand = require(\"must\")"," * demand(null).be.null()"," *"," * @method null"," */","Must.prototype.null = function() {","  this.assert(this.actual === null, \"be\", {expected: null})","}","","/**"," * Assert object is `undefined`."," *"," * Because JavaScript does not allow method calls on `undefined`, you'll have to"," * wrap an expected undefined with [`Must`](#Must). Assigning `require(\"must\")`"," * to `expect` or `demand` works well."," *"," * If you want to assert that an object's property is `undefined`, see"," * [`property`](#Must.prototype.property)."," *"," * @example"," * var demand = require(\"must\")"," * demand(undefined).be.undefined()"," *"," * @method undefined"," */","Must.prototype.undefined = function() {","  this.assert(this.actual === undefined, \"be\", {expected: undefined})","}","","/**"," * Assert object is a boolean (`true` or `false`).  "," * Boxed boolean objects (`new Boolean`) are _not_ considered booleans."," *"," * @example"," * true.must.be.a.boolean()"," *"," * @method boolean"," */","Must.prototype.boolean = function() {","  this.assert(typeof this.actual == \"boolean\", \"be a boolean\")","}","","/**"," * Assert object is a number.  "," * Boxed number objects (`new Number`) are _not_ considered numbers."," *"," * @example"," * (42).must.be.a.number()"," *"," * @method number"," */","Must.prototype.number = function() {","  this.assert(typeof this.actual == \"number\", \"be a number\")","}","","/**"," * Assert object is a string.  "," * Boxed string objects (`new String`) are _not_ considered strings."," *"," * @example"," * \"Hello\".must.be.a.string()"," *"," * @method string"," */","Must.prototype.string = function() {","  this.assert(typeof this.actual == \"string\", \"be a string\")","}","","/**"," * Assert object is a symbol."," *"," * @example"," * Symbol().must.be.a.symbol()"," *"," * @method symbol"," */","Must.prototype.symbol = function() {","  this.assert(typeof this.actual == \"symbol\", \"be a symbol\")","}","","/**"," * Assert object is a date."," *"," * @example"," * new Date().must.be.a.date()"," *"," * @method date"," */","Must.prototype.date = function() {","  this.assert(kindof(this.actual) == \"date\", \"be a date\")","}","","/**"," * Assert object is a regular expression."," *"," * @example"," * /[a-z]/.must.be.a.regexp()"," *"," * @method regexp"," */","Must.prototype.regexp = function() {","  this.assert(kindof(this.actual) == \"regexp\", \"be a regular expression\")","}","","/**"," * Assert object is an array."," *"," * @example"," * [42, 69].must.be.an.array()"," *"," * @method array"," */","Must.prototype.array = function() {","  this.assert(Array.isArray(this.actual), \"be an array\")","}","","/**"," * Assert object is a function."," *"," * @example"," * (function() {}).must.be.a.function()"," *"," * @method function"," */","Must.prototype.function = function() {","  this.assert(typeof this.actual == \"function\", \"be a function\")","}","","/**"," * Assert object is an.. object."," *"," * @example"," * ({}).must.be.an.object()"," *"," * @method object"," */","Must.prototype.object = function() {","  var ok = this.actual && typeof this.actual == \"object\"","  this.assert(ok, \"be an object\")","}","","/**"," * Assert object is truthy (`!!obj`)."," *"," * Only `null`, `undefined`, `0`, `false` and `\"\"` are falsy in JavaScript."," * Everything else is truthy."," *"," * @example"," * (42).must.be.truthy()"," * \"Hello\".must.be.truthy()"," *"," * @method truthy"," */","Must.prototype.truthy = function() {","  this.assert(this.actual, \"be truthy\")","}","","/**"," * Assert object is falsy (`!obj`)."," *"," * Only `null`, `undefined`, `0`, `false` and `\"\"` are falsy in JavaScript."," * Everything else is truthy."," *"," * @example"," * 0.must.be.falsy()"," * \"\".must.be.falsy()"," *"," * @method falsy"," */","Must.prototype.falsy = function() {","  this.assert(!this.actual, \"be falsy\")","}","","/**"," * Assert object is exists and thereby is not null or undefined."," *"," * @example"," * 0.must.exist()"," * \"\".must.exist()"," * ({}).must.exist()"," *"," * @method exist"," */","Must.prototype.exist = function() {","  this.assert(this.actual != null, \"exist\")","}","","/**"," * Assert that an object is an instance of something.  "," * Uses `obj instanceof expected`."," *"," * @example"," * new Date().must.be.an.instanceof(Date)"," *"," * @method instanceof"," * @param class"," */","Must.prototype.instanceof = function(expected) {","  var ok = this.actual instanceof expected","  this.assert(ok, instanceofMessage.bind(this, expected), {expected: expected})","}","","function instanceofMessage(expected) {","  var type = expected.displayName || expected.name || stringify(expected)","  return \"be an instance of \" + type","}","","/**"," * @method instanceOf"," * @alias instanceof"," */","Must.prototype.instanceOf = Must.prototype.instanceof","","/**"," * Assert that an object is empty.  "," * Checks either the `length` for arrays and strings or the count of"," * enumerable keys. Inherited keys also counted."," *"," * @example"," * \"\".must.be.empty()"," * [].must.be.empty()"," * ({}).must.be.empty()"," *"," * @method empty"," */","Must.prototype.empty = function() {","  var ok = false","  if (typeof this.actual === \"string\" || Array.isArray(this.actual))","    ok = this.actual.length === 0","  else if (typeof this.actual == \"object\" || typeof this.actual == \"function\")","    ok = O.isEmpty(this.actual)","","  this.assert(ok, \"be empty\")","}","","/**"," * Assert a string ends with the given string."," *"," * @example"," * \"Hello, John\".must.endWith(\"John\")"," *"," * @method endWith"," * @param expected"," */","Must.prototype.endWith = function(expected) {","  this.assert(endsWith(this.actual, expected), \"end with\", {expected: expected})","}","","/**"," * Assert object strict equality or identity (`===`)."," *"," * To compare value objects (like `Date` or `RegExp`) by their value rather"," * than identity, use [`eql`](#Must.prototype.eql).  "," * To compare arrays and objects by content, also use"," * [`eql`](#Must.prototype.eql)."," *"," * @example"," * (42).must.equal(42)"," *"," * var date = new Date"," * date.must.equal(date)"," *"," * @method equal"," * @param expected"," */","Must.prototype.equal = function(expected) {","  this.assert(this.actual === expected, \"equal\", {expected: expected})","}","","/**"," * Assert that an object is an error (instance of `Error` by default).  "," * Optionally assert it matches `expected` (and/or is of instance"," * `constructor`).  "," * When you have a function that's supposed to throw, use"," * [`throw`](#Must.prototype.throw)."," *"," * Given `expected`, the error is asserted as follows:"," * - A **string** is compared with the exception's `message` property."," * - A **regular expression** is matched against the exception's `message`"," *   property."," * - A **function** (a.k.a. constructor) is used to check if the error"," *   is an `instanceof` that constructor."," * - All other cases of `expected` are left unspecified for now."," *"," * @example"," * var err = throw new RangeError(\"Everything's amazing and nobody's happy\") }"," * err.must.be.an.error()"," * err.must.be.an.error(\"Everything's amazing and nobody's happy\")"," * err.must.be.an.error(/amazing/)"," * err.must.be.an.error(Error)"," * err.must.be.an.error(RangeError)"," * err.must.be.an.error(RangeError, \"Everything's amazing and nobody's happy\")"," * err.must.be.an.error(RangeError, /amazing/)"," *"," * @method error"," * @param [constructor]"," * @param [expected]"," */","Must.prototype.error = function(type, expected) {","  if (arguments.length <= 1) expected = ANY","  if (arguments.length == 1 && !isFn(type)) { expected = type; type = null }","","  var ok = isError(this.actual, type || Error, expected)","  var msg = expected !== ANY ? \"be an error matching\" : \"be an error\"","  var opts = expected !== ANY ? {expected: expected} : null","  this.assert(ok, msg, opts)","}","","/**","  * Can also be used as a pass-through property for a fluent chain.","  *","  * @example","  * var claim = require(\"must\")","  * claim(true).is.true()","  * claim(42).is(42)","  *","  * @method is","  * @alias equal","  */","defineGetter(Must.prototype, \"is\", lookupGetter(Must.prototype, \"be\"))","","/**"," * Assert object equality by content and if possible, recursively.  "," * Also handles circular and self-referential objects."," *"," * For most parts it asserts strict equality (`===`), but:"," * - `RegExp` objects are compared by their pattern and flags."," * - `Date` objects are compared by their value."," * - `Array` objects are compared recursively."," * - `NaN`s are considered equivalent."," * - Instances of the same class with a `valueOf` function are compared by its"," *   output."," * - Plain objects and instances of the same class are compared recursively."," *"," * **Does not coerce types** so **mismatching types fail**.  "," * Inherited enumerable properties are also taken into account."," *"," * **Instances** are objects whose prototype's `constructor` property is set."," * E.g. `new MyClass`.  "," * Others, like `{}` or `Object.create({})`, are **plain objects**."," *"," * @example"," * /[a-z]/.must.eql(/[a-z]/)"," * new Date(1987, 5, 18).must.eql(new Date(1987, 5, 18))"," * [\"Lisp\", 42].must.eql([\"Lisp\", 42])"," * ({life: 42, love: 69}).must.eql({life: 42, love: 69})"," * NaN.must.eql(NaN)"," *"," * function Answer(answer) { this.answer = answer }"," * new Answer(42).must.eql(new Answer(42))"," *"," * @method eql"," * @param expected"," */","Must.prototype.eql = function(expected) {","  var ok = deepEgal(this.actual, expected, eql)","  this.assert(ok, \"be equivalent to\", {expected: expected, diffable: true})","}","","/**"," * Assert object includes `expected`."," *"," * For strings it checks the text, for arrays it checks elements and for"," * objects the property values. Everything is checked with strict equals"," * (`===`)."," *"," * @example"," * \"Hello, John!\".must.include(\"John\")"," * [1, 42, 3].must.include(42)"," * ({life: 42, love: 69}).must.include(42)"," *"," * @method include"," * @param expected"," */","Must.prototype.include = function(expected) {","  var found","  if (typeof this.actual === \"string\" || Array.isArray(this.actual))","    found = this.actual.indexOf(expected) >= 0","  else","    for (var key in this.actual)","      if (this.actual[key] === expected) { found = true; break }","","  this.assert(found, \"include\", {expected: expected})","}","","/**"," * @method contain"," * @alias include"," */","Must.prototype.contain = Must.prototype.include","","/**"," * Assert that an array is a permutation of the given array."," *"," * An array is a permutation of another if they both have the same elements"," * (including the same number of duplicates) regardless of their order."," * Elements are checked with strict equals (`===`)."," *"," * @example"," * [1, 1, 2, 3].must.be.a.permutationOf([3, 2, 1, 1])"," * [7, 8, 8, 9].must.not.be.a.permutationOf([9, 8, 7])"," *"," * @method permutationOf"," * @param expected"," */","Must.prototype.permutationOf = function(expected) {","  var ok = isPermutationOf(this.actual, expected)","  this.assert(ok, \"be a permutation of\", {expected: expected, diffable: true})","}","","function isPermutationOf(actual, expected) {","  if (!Array.isArray(actual) || !Array.isArray(expected)) return false","  if (actual.length !== expected.length) return false","","  actual = actual.slice().sort()","  expected = expected.slice().sort()","  for (var i = 0; i < actual.length; i++) {","    if (actual[i] !== expected[i]) return false","  }","","  return true","}","","/**"," * Assert object matches the given regular expression."," *"," * If you pass in a non regular expression object, it'll be converted to one"," * via `new RegExp(regexp)`."," *"," * @example"," * \"Hello, John!\".must.match(/john/i)"," * \"Wei wu wei\".must.match(\"wu\")"," *"," * @method match"," * @param regexp"," */","Must.prototype.match = function(expected) {","  var regexp = expected instanceof RegExp ? expected : new RegExp(expected)","  this.assert(regexp.exec(this.actual), \"match\", {expected: regexp})","}","","/**","  * Pass-through property for a fluent chain.","  *","  * @example","  * (42).must.must.must.must.equal(42)","  *","  * @property must","  * @on prototype","  */","defineGetter(Must.prototype, \"must\", passthrough)","","/**","  * Pass-through property for a fluent chain.","  *","  * @example","  * (42).must.be.the.number()","  *","  * @property the","  * @on prototype","  */","defineGetter(Must.prototype, \"the\", passthrough)","","/**"," * Assert that a function throws.  "," * Optionally assert it throws `expected` (and/or is of instance"," * `constructor`).  "," * When you already have an error reference, use"," * [`error`](#Must.prototype.error)."," *"," * Given `expected`, the error is asserted as follows:"," * - A **string** is compared with the exception's `message` property."," * - A **regular expression** is matched against the exception's `message`"," *   property."," * - A **function** (a.k.a. constructor) is used to check if the error"," *   is an `instanceof` that constructor."," * - All other cases of `expected` are left unspecified for now."," *"," * Because of how JavaScript works, the function will be called in `null`"," * context (`this`). If you want to test an instance method, bind it:"," * `obj.method.bind(obj).must.throw()`."," *"," * @example"," * function omg() {"," *   throw new RangeError(\"Everything's amazing and nobody's happy\")"," * }"," *"," * omg.must.throw()"," * omg.must.throw(\"Everything's amazing and nobody's happy\")"," * omg.must.throw(/amazing/)"," * omg.must.throw(Error)"," * omg.must.throw(RangeError)"," * omg.must.throw(RangeError, \"Everything's amazing and nobody's happy\")"," * omg.must.throw(RangeError, /amazing/)"," *"," * @method throw"," * @param [constructor]"," * @param [expected]"," */","Must.prototype.throw = function(type, expected) {","  if (arguments.length <= 1) expected = ANY","  if (arguments.length == 1 && !isFn(type)) { expected = type; type = null }","","  var ok = false, exception","  try { this.actual.call(null) } catch (ex) { ok = true; exception = ex }","  ok = ok && isError(exception, type, expected)","","  var opts = {actual: exception}","  if (expected !== ANY) opts.expected = expected","  this.assert(ok, \"throw\", opts)","}","","/**"," * Assert that an object has a length property equal to `expected`."," *"," * @example"," * \"Something or other\".must.have.length(18)"," * [1, 2, 3, \"Four o'clock rock\"].must.have.length(4)"," *"," * @method length"," * @param expected"," */","Must.prototype.length = function(expected) {","  var ok = this.actual.length == expected","  this.assert(ok, \"have length of\", {expected: expected})","}","","/**"," * Assert that an object is frozen with `Object.isFrozen`."," *"," * @example"," * Object.freeze({}).must.be.frozen()"," *"," * @method frozen"," */","Must.prototype.frozen = function() {","  this.assert(Object.isFrozen(this.actual), \"be frozen\")","}","","/**"," * Assert that an object has all of the properties given in `properties` with"," * equal (`===`) values.  In other words, asserts that the given object is"," * a subset of the one asserted against."," *"," * Takes **inherited properties** into account. To not do so, see"," * [`ownProperties`](#Must.prototype.ownProperties)."," *"," * @example"," * var john = {name: \"John\", age: 42, sex: \"male\"}"," * john.must.have.properties({name: \"John\", sex: \"male\"})"," *"," * @method properties"," * @param properties"," */","Must.prototype.properties = function(props) {","  var obj = this.actual","  var ok = this.actual != null","","  if (ok) for (var key in props) {","    ok = key in obj && obj[key] === props[key]","    if (!ok) break","  }","","  this.assert(ok, \"have properties\", {expected: props, diffable: true})","}","","/**"," * Assert that an object has all of the properties given in `properties` with"," * equal (`===`) values and that they're own properties.  In other words,"," * asserts that the given object is a subset of the one asserted against."," *"," * **Does not** take **inherited properties** into account. To do so, see"," * [`properties`](#Must.prototype.properties)."," *"," * @example"," * var john = {name: \"John\", age: 42, sex: \"male\"}"," * john.must.have.ownProperties({name: \"John\", sex: \"male\"})"," *"," * @method ownProperties"," * @param properties"," */","Must.prototype.ownProperties = function(props) {","  var obj = this.actual","  var ok = this.actual != null","","  if (ok) for (var key in props) {","    ok = key in obj && hasOwn(obj, key) && obj[key] === props[key]","    if (!ok) break","  }","","  this.assert(ok, \"have own properties\", {expected: props, diffable: true})","}","","/**"," * Assert that an object has property `property`.  "," * Optionally assert it *equals* (`===`) to `value`."," *"," * Takes **inherited properties** into account. To not do so, see"," * [`ownProperty`](#Must.prototype.ownProperty)."," *"," * @example"," * (function() {}).must.have.property(\"call\")"," * ({life: 42, love: 69}).must.have.property(\"love\", 69)"," *"," * @method property"," * @param property"," * @param [value]"," */","Must.prototype.property = function(property, expected) {","  var ok = this.actual != null && property in Object(this.actual)","  if (ok && arguments.length > 1) ok = this.actual[property] === expected","","  var msg = \"have property \\\"\" + property + \"\\\"\", opts","  if (arguments.length > 1) { msg += \" equal to\"; opts = {expected: expected} }","  this.assert(ok, msg, opts)","}","","/**"," * Assert that an object has own property `property`.  "," * Optionally assert it *equals* (`===`) to `value`."," *"," * **Does not** take **inherited properties** into account. To do so, see"," * [`property`](#Must.prototype.property)."," *"," * @example"," * ({life: 42, love: 69}).must.have.ownProperty(\"love\", 69)"," *"," * @method ownProperty"," * @param property"," * @param [value]"," */","Must.prototype.ownProperty = function(property, expected) {","  var ok = this.actual != null","  ok = ok && hasOwn(this.actual, property)","  if (ok && arguments.length > 1) ok = this.actual[property] === expected","","  var msg = \"have own property \\\"\" + property + \"\\\"\", opts","  if (arguments.length > 1) { msg += \" equal to\"; opts = {expected: expected} }","  this.assert(ok, msg, opts)","}","","/**"," * @method own"," * @alias ownProperty"," */","Must.prototype.own = Must.prototype.ownProperty","","/**"," * Assert that an object has only the expected enumerable `keys`.  "," * Pass an array of strings as `keys`."," *"," * Takes **inherited properties** into account. To not do so, see"," * [`ownKeys`](#Must.prototype.ownKeys)."," *"," * @example"," * ({life: 42, love: 69}).must.have.keys([\"life\", \"love\"])"," * Object.create({life: 42}).must.have.keys([\"life\"])"," *"," * @method keys"," * @param keys"," */","Must.prototype.keys = function(expected) {","  var ok = this.actual != null","  ok = ok && isPermutationOf(O.keys(Object(this.actual)), expected)","  this.assert(ok, \"have keys\", {expected: expected})","}","","/**"," * Assert that an object has only the expected enumerable `keys` of its own.  "," * Pass an array of strings as `keys`."," *"," * **Does not** take **inherited properties** into account. To do so, see"," * [`keys`](#Must.prototype.keys)."," *"," * @example"," * ({life: 42, love: 69}).must.have.ownKeys([\"life\", \"love\"])"," *"," * @method ownKeys"," * @param keys"," */","Must.prototype.ownKeys = function(expected) {","  var ok = this.actual != null","  ok = ok && isPermutationOf(Object.keys(Object(this.actual)), expected)","  this.assert(ok, \"have own keys\", {expected: expected})","}","","/**"," * Assert that an object has an enumerable property `property`.  "," * It will fail if the object lacks the property entirely."," *"," * This also checks inherited properties in the prototype chain, something which"," * `Object.prototype.propertyIsEnumerable` itself does not do."," *"," * For checking if a property exists *and* is non-enumerable, see"," * [`nonenumerable`](#Must.prototype.nonenumerable)."," *"," * @example"," * ({life: 42, love: 69}).must.have.enumerable(\"love\")"," *"," * @method enumerable"," * @param property"," */","Must.prototype.enumerable = function(property) {","  var ok = this.actual != null","  ok = ok && isEnumerable(Object(this.actual), property)","  this.assert(ok, \"have enumerable property \\\"\" + property + \"\\\"\")","}","","/**"," * @method enumerableProperty"," * @alias enumerable"," */","Must.prototype.enumerableProperty = Must.prototype.enumerable","","/**"," * Assert that an object has a non-enumerable property `property`.  "," * It will fail if the object lacks the property entirely."," *"," * This also checks inherited properties in the prototype chain, something which"," * `Object.prototype.propertyIsEnumerable` itself does not do."," *"," * It's the inverse of [`enumerable`](#Must.prototype.enumerable)."," *"," * @example"," * (function() {}).must.have.nonenumerable(\"call\")"," * Object.create({}, {love: {enumerable: 0}}).must.have.nonenumerable(\"love\")"," *"," * @method nonenumerable"," * @param property"," */","Must.prototype.nonenumerable = function(property) {","  var ok = this.actual != null","  ok = ok && property in Object(this.actual)","  ok = ok && !isEnumerable(Object(this.actual), property)","  this.assert(ok, \"have nonenumerable property \\\"\" + property + \"\\\"\")","}","","function isEnumerable(obj, name) {","  // Using propertyIsEnumerable saves a possible looping of all keys.","  if (Object.prototype.propertyIsEnumerable.call(obj, name)) return true","  for (var key in obj) if (key == name) return true","  return false","}","","/**"," * @method nonenumerableProperty"," * @alias nonenumerable"," */","Must.prototype.nonenumerableProperty = Must.prototype.nonenumerable","","/**"," * Assert that an object is below and less than (`<`) `expected`.  "," * Uses `<` for comparison, so it'll also work with value objects (those"," * implementing [`valueOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)) like `Date`."," *"," * @example"," * (42).must.be.below(69)"," *"," * @method below"," * @param expected"," */","Must.prototype.below = function(expected) {","  this.assert(this.actual < expected, \"be below\", {expected: expected})","}","","/**"," * @method lt"," * @alias below"," */","Must.prototype.lt = Must.prototype.below","","/**"," * Works well with dates where saying *before* is more natural than *below* or"," * *less than*."," *"," * To assert that a date is equivalent to another date, use"," * [`eql`](#Must.prototype.eql). For regular numbers,"," * [`equal`](#Must.prototype.equal) is fine."," *"," * @example"," * (42).must.be.before(1337)"," * new Date(2000, 5, 18).must.be.before(new Date(2001, 0, 1))"," *"," * @method before"," * @alias below"," */","Must.prototype.before = Must.prototype.below","","/**"," * Assert that an object is at most, less than or equal to (`<=`), `expected`.  "," * Uses `<=` for comparison, so it'll also work with value objects (those"," * implementing [`valueOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)) like `Date`."," *"," * @example"," * (42).must.be.at.most(69)"," * (42).must.be.at.most(42)"," *"," * @method most"," * @param expected"," */","Must.prototype.most = function(expected) {","  this.assert(this.actual <= expected, \"be at most\", {expected: expected})","}","","/**"," * @method lte"," * @alias most"," */","Must.prototype.lte = Must.prototype.most","","/**"," * Assert that an object is above and greater than (`>`) `expected`.  "," * Uses `>` for comparison, so it'll also work with value objects (those"," * implementing [`valueOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)) like `Date`."," *"," * @example"," * (69).must.be.above(42)"," *"," * @method above"," * @param expected"," */","Must.prototype.above = function(expected) {","  this.assert(this.actual > expected, \"be above\", {expected: expected})","}","","/**"," * @method gt"," * @alias above"," */","Must.prototype.gt = Must.prototype.above","","/**"," * Works well with dates where saying *after* is more natural than *above* or"," * *greater than*."," *"," * To assert that a date is equivalent to another date, use"," * [`eql`](#Must.prototype.eql). For regular numbers,"," * [`equal`](#Must.prototype.equal) is fine."," *"," * @example"," * (1337).must.be.after(42)"," * new Date(2030, 5, 18).must.be.after(new Date(2013, 9, 23))"," *"," * @method after"," * @alias above"," */","Must.prototype.after = Must.prototype.above","","/**"," * Assert that an object is at least, greater than or equal to (`>=`),"," * `expected`.  "," * Uses `>=` for comparison, so it'll also work with value objects (those"," * implementing [`valueOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)) like `Date`."," *"," * @example"," * (69).must.be.at.least(42)"," * (42).must.be.at.least(42)"," *"," * @method least"," * @param expected"," */","Must.prototype.least = function(expected) {","  this.assert(this.actual >= expected, \"be at least\", {expected: expected})","}","","/**"," * @method gte"," * @alias least"," */","Must.prototype.gte = Must.prototype.least","","/**"," * Assert that an object is between `begin` and `end` (inclusive).  "," * Uses `<` for comparison, so it'll also work with value objects (those"," * implementing [`valueOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf)) like `Date`."," *"," * @example"," * (13).must.be.between(13, 69)"," * (42).must.be.between(13, 69)"," * (69).must.be.between(13, 69)"," *"," * @method between"," * @param begin"," * @param end"," */","Must.prototype.between = function(begin, end) {","  this.assert(begin <= this.actual && this.actual <= end, function() {","    return \"be between \" + stringify(begin) + \" and \" + stringify(end)","  })","}","/**"," * Makes any matcher following the use of `resolve` wait till a promise"," * resolves before asserting.  "," * Returns a new promise that will either resolve if the assertion passed or"," * fail with `AssertionError`."," *"," * Promises are transparent to matchers, so everything will also work with"," * customer matchers you've added to `Must.prototype`. Internally Must just"," * waits on the promise and calls the matcher function once it's resolved."," *"," * With [Mocha](http://mochajs.org), using this will look something like:"," *"," * ```javascript"," * it(\"must pass\", function() {"," *   return Promise.resolve(42).must.resolve.to.equal(42)"," * })"," * ```"," *"," * Using [CoMocha](https://github.com/blakeembrey/co-mocha), it'll look like:"," * ```javascript"," * it(\"must pass\", function*() {"," *   yield Promise.resolve(42).must.resolve.to.equal(42)"," *   yield Promise.resolve([1, 2, 3]).must.resolve.to.not.include(42)"," * })"," * ```"," *"," * @example"," * Promise.resolve(42).must.resolve.to.equal(42)"," * Promise.resolve([1, 2, 3]).must.resolve.to.not.include(42)"," *"," * @property resolve"," * @on prototype"," */","defineGetter(Must.prototype, \"resolve\", function() {","  return Resolvable(this)","})","","/**"," * @example"," * Promise.resolve(42).must.then.equal(42)"," *"," * @property then"," * @on prototype"," * @alias resolve"," */","defineGetter(Must.prototype, \"then\", lookupGetter(Must.prototype, \"resolve\"))","","/**"," * @example"," * Promise.resolve(42).must.eventually.equal(42)"," *"," * @property eventually"," * @on prototype"," * @alias resolve"," */","defineGetter(Must.prototype, \"eventually\",","             lookupGetter(Must.prototype, \"resolve\"))","","/**"," * Makes any matcher following the use of `reject` wait till a promise"," * is rejected before asserting.  "," * Returns a new promise that will either resolve if the assertion passed or"," * fail with `AssertionError`."," *"," * Promises are transparent to matchers, so everything will also work with"," * customer matchers you've added to `Must.prototype`. Internally Must just"," * waits on the promise and calls the matcher function once it's rejected."," *"," * With [Mocha](http://mochajs.org), using this will look something like:"," *"," * ```javascript"," * it(\"must pass\", function() {"," *   return Promise.reject(42).must.reject.to.equal(42)"," * })"," * ```"," *"," * Using [CoMocha](https://github.com/blakeembrey/co-mocha), it'll look like:"," * ```javascript"," * it(\"must pass\", function*() {"," *   yield Promise.reject(42).must.reject.to.equal(42)"," *   yield Promise.reject([1, 2, 3]).must.reject.to.not.include(42)"," * })"," * ```"," *"," * @example"," * Promise.reject(42).must.reject.to.equal(42)"," * Promise.reject([1, 2, 3]).must.reject.to.not.include(42)"," *"," * @property reject"," * @on prototype"," */","defineGetter(Must.prototype, \"reject\", function() {","  return Rejectable(this)","})","","/**"," * Assert a string starts with the given string."," *"," * @example"," * \"Hello, John\".must.startWith(\"Hello\")"," *"," * @method startWith"," * @param expected"," */","Must.prototype.startWith = function(expected) {","  var ok = startsWith(this.actual, expected)","  this.assert(ok, \"start with\", {expected: expected})","}","","/**","  * Pass-through property for a fluent chain.","  *","  * @example","  * Promise.resolve(42).must.resolve.with.number()","  *","  * @property with","  * @on prototype","  */","defineGetter(Must.prototype, \"with\", passthrough)","","Must.prototype.assert = function assert(ok, message, opts) {","  if (!this.negative ? ok : !ok) return","","  opts = opts ? Object.create(opts) : {}","  if (!(\"actual\" in opts)) opts.actual = this.actual","","  if (!(\"caller\" in opts)) {","    // Accessing caller in strict mode throws TypeError.","    try { opts.caller = assert.caller }","    catch (ex) { opts.caller = assert }","  }","","  var msg = stringify(this.actual) + \" must \" + (this.negative ? \"not \" : \"\")","  if (typeof message == \"function\") msg += message.call(this)","  else msg += message + (\"expected\" in opts ? \" \"+stringify(opts.expected) : \"\")","  if (this.message != null) msg = this.message + \": \" + msg","","  throw new AssertionError(msg, opts)","}","","Object.defineProperty(Must.prototype, \"assert\", {enumerable: false})","","function eql(a, b) {","  if (egal(a, b)) return true","","  var type = kindofPlain(a)","  if (type !== kindofPlain(b)) return false","  if (isNumber(a) && isNumber(b) && isNaN(+a) && isNaN(+b)) return true","","  switch (type) {","    case \"array\":","    case \"plain\":","      return null","","    case \"object\":","      if (getConstructorOf(a) !== getConstructorOf(b)) return false","      if (hasValueOf(a) && hasValueOf(b)) return false","      return null","","    default: return false","  }","}","","function getConstructorOf(obj) {","  var prototype = Object.getPrototypeOf(obj)","  return prototype === null ? undefined : prototype.constructor","}","","function hasValueOf(obj) {","  var valueOf = obj.valueOf","  return typeof valueOf === \"function\" && valueOf !== Object.prototype.valueOf","}","","function kindofPlain(obj) {","  var type = kindof(obj)","  if (type === \"object\" && O.isPlainObject(obj)) return \"plain\"","  return type","}","","function isError(err, constructor, expected) {","  if (constructor != null && !(err instanceof constructor)) return false","  if (expected === ANY) return true","","  switch (kindof(expected)) {","    case \"string\": return messageFromError(err) === expected","    case \"regexp\": return expected.exec(messageFromError(err))","    default: return err === expected","  }","}","","function messageFromError(err) {","  // The message in new Error(message) gets converted to a string.","  return err == null || typeof err == \"string\" ? err : err.message","}","","function isFn(fn) { return typeof fn === \"function\" }","function isNumber(n) { return typeof n === \"number\" || n instanceof Number }","function passthrough() { return this }",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"47":1,"48":3,"49":3,"50":3,"63":1,"64":0,"77":1,"89":1,"101":1,"102":0,"114":1,"128":1,"132":0,"133":0,"134":0,"150":1,"161":1,"162":0,"174":1,"175":0,"186":1,"187":0,"206":1,"207":0,"226":1,"227":0,"239":1,"240":0,"252":1,"253":0,"265":1,"266":0,"277":1,"278":0,"289":1,"290":0,"301":1,"302":0,"313":1,"314":0,"325":1,"326":0,"337":1,"338":0,"339":0,"354":1,"355":0,"370":1,"371":0,"384":1,"385":0,"398":1,"399":0,"400":0,"403":1,"404":0,"405":0,"412":1,"426":1,"427":0,"428":0,"429":0,"430":0,"431":0,"433":0,"445":1,"446":0,"466":1,"467":0,"499":1,"500":0,"501":0,"503":0,"504":0,"505":0,"506":0,"520":1,"555":1,"556":0,"557":0,"575":1,"576":0,"577":0,"578":0,"580":0,"581":0,"583":0,"590":1,"606":1,"607":0,"608":0,"611":1,"612":0,"613":0,"615":0,"616":0,"617":0,"618":0,"621":0,"637":1,"638":0,"639":0,"651":1,"662":1,"700":1,"701":0,"702":0,"704":0,"705":0,"706":0,"708":0,"709":0,"710":0,"723":1,"724":0,"725":0,"736":1,"737":0,"755":1,"756":0,"757":0,"759":0,"760":0,"761":0,"764":0,"782":1,"783":0,"784":0,"786":0,"787":0,"788":0,"791":0,"809":1,"810":0,"811":0,"813":0,"814":0,"815":0,"832":1,"833":0,"834":0,"835":0,"837":0,"838":0,"839":0,"846":1,"862":1,"863":0,"864":0,"865":0,"881":1,"882":0,"883":0,"884":0,"903":1,"904":0,"905":0,"906":0,"913":1,"931":1,"932":0,"933":0,"934":0,"935":0,"938":1,"940":0,"941":0,"942":0,"949":1,"962":1,"963":0,"970":1,"987":1,"1001":1,"1002":0,"1009":1,"1022":1,"1023":0,"1030":1,"1047":1,"1062":1,"1063":0,"1070":1,"1086":1,"1087":0,"1088":0,"1124":1,"1125":0,"1136":1,"1146":1,"1182":1,"1183":0,"1195":1,"1196":0,"1197":0,"1209":1,"1211":1,"1212":0,"1214":0,"1215":0,"1217":0,"1219":0,"1220":0,"1223":0,"1224":0,"1225":0,"1226":0,"1228":0,"1231":1,"1233":1,"1234":0,"1236":0,"1237":0,"1238":0,"1240":0,"1243":0,"1246":0,"1247":0,"1248":0,"1250":0,"1254":1,"1255":0,"1256":0,"1259":1,"1260":0,"1261":0,"1264":1,"1265":0,"1266":0,"1267":0,"1270":1,"1271":0,"1272":0,"1274":0,"1275":0,"1276":0,"1277":0,"1281":1,"1283":0,"1286":1,"1287":1,"1288":2}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/assertion_error.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/assertion_error.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"AssertionError","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}}},"2":{"name":"(anonymous_2)","line":71,"loc":{"start":{"line":71,"column":53},"end":{"line":71,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":13,"column":0},"end":{"line":56,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":57}},"7":{"start":{"line":21,"column":32},"end":{"line":21,"column":57}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":63}},"9":{"start":{"line":29,"column":34},"end":{"line":29,"column":63}},"10":{"start":{"line":43,"column":2},"end":{"line":43,"column":63}},"11":{"start":{"line":43,"column":34},"end":{"line":43,"column":63}},"12":{"start":{"line":50,"column":2},"end":{"line":55,"column":74}},"13":{"start":{"line":50,"column":34},"end":{"line":53,"column":4}},"14":{"start":{"line":54,"column":7},"end":{"line":55,"column":74}},"15":{"start":{"line":55,"column":4},"end":{"line":55,"column":74}},"16":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"17":{"start":{"line":62,"column":0},"end":{"line":62,"column":48}},"18":{"start":{"line":71,"column":0},"end":{"line":73,"column":2}},"19":{"start":{"line":72,"column":2},"end":{"line":72,"column":22}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":10}},{"start":{"line":21,"column":14},"end":{"line":21,"column":30}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":10}},{"start":{"line":29,"column":14},"end":{"line":29,"column":32}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":10}},{"start":{"line":43,"column":14},"end":{"line":43,"column":32}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"8":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":10}},{"start":{"line":50,"column":14},"end":{"line":50,"column":32}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":7},"end":{"line":54,"column":7}},{"start":{"line":54,"column":7},"end":{"line":54,"column":7}}]},"10":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":34},"end":{"line":55,"column":38}},{"start":{"line":55,"column":42},"end":{"line":55,"column":53}},{"start":{"line":55,"column":57},"end":{"line":55,"column":73}}]}},"code":["var O = require(\"oolong\")","var FIRST_LINE = /^.*$/m","module.exports = AssertionError","","/**"," * Error object thrown when an assertion fails."," *"," * @class AssertionError"," * @constructor"," * @param message"," * @param [options]"," */","function AssertionError(msg, opts) {","  this.message = msg","","  /**","   * The asserted object.","   *","   * @property actual","   */","  if (opts && \"actual\" in opts) this.actual = opts.actual","","  /**","   * If the matcher took an argument or asserted against something (like","   * `foo.must.be.true()`), then this is the expected value.","   *","   * @property expected","   */","  if (opts && \"expected\" in opts) this.expected = opts.expected","","  /**","   * Whether it makes sense to compare objects granularly or even show a diff","   * view of the objects involved.  ","   *","   * Most matchers (e.g. [`empty`](#Must.prototype.empty) and","   * [`string`](#Must.prototype.string)) are concrete, strict and atomic and","   * don't lend themselves to be compared property by property.  Others however,","   * like [`eql`](#Must.prototype.eql), are more granular and comparing them","   * line by line helps understand how they differ.","   *","   * @property diffable","   */","  if (opts && \"diffable\" in opts) this.diffable = opts.diffable","","  /**","   * The stack trace starting from the code that called `must`.","   *","   * @property stack","   */","  if (opts && opts.stack != null) Object.defineProperty(this, \"stack\", {","    value: opts.stack.replace(FIRST_LINE, this),","    configurable: true, writable: true","  })","  else if (Error.captureStackTrace)","    Error.captureStackTrace(this, opts && opts.caller || this.constructor)","}","","AssertionError.prototype = Object.create(Error.prototype, {","  constructor: {value: AssertionError, configurable: true, writable: true}","})","","AssertionError.prototype.name = \"AssertionError\"","","/**"," * Some test runners (like [Mocha](http://visionmedia.github.io/mocha/)) expect"," * this property instead."," *"," * @property showDiff"," * @alias diffable"," */","O.defineGetter(AssertionError.prototype, \"showDiff\", function() {","  return this.diffable","})",""],"l":{"1":1,"2":1,"3":1,"13":1,"14":0,"21":0,"29":0,"43":0,"50":0,"54":0,"55":0,"58":1,"62":1,"71":1,"72":0}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/resolvable.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/resolvable.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":32}}},"2":{"name":"promisify","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}}},"3":{"name":"matcher","line":8,"loc":{"start":{"line":8,"column":9},"end":{"line":8,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":13,"column":1}},"5":{"start":{"line":8,"column":2},"end":{"line":12,"column":3}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":34}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":71}},"8":{"start":{"line":10,"column":33},"end":{"line":10,"column":71}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":78}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]}},"code":["var Thenable = require(\"./thenable\")","","module.exports = function(must) {","  return Thenable(must, promisify)","}","","function promisify(fn) {","  return function matcher() {","    var must = Object.create(this)","    if (Error.captureStackTrace) Error.captureStackTrace(must, matcher)","    return this.actual.then(Thenable.prototype.then.bind(must, fn, arguments))","  }","}",""],"l":{"1":1,"3":1,"4":0,"7":1,"8":0,"9":0,"10":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/thenable.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/thenable.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":27},"end":{"line":4,"column":53}}},"2":{"name":"assert","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":64}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":52}}},"4":{"name":"hasFunction","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":28}},"5":{"start":{"line":7,"column":2},"end":{"line":8,"column":67}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":67}},"7":{"start":{"line":8,"column":33},"end":{"line":8,"column":67}},"8":{"start":{"line":10,"column":2},"end":{"line":13,"column":4}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":13}},"10":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"11":{"start":{"line":19,"column":2},"end":{"line":19,"column":40}},"12":{"start":{"line":20,"column":2},"end":{"line":20,"column":46}},"13":{"start":{"line":20,"column":23},"end":{"line":20,"column":46}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":32}},"15":{"start":{"line":24,"column":0},"end":{"line":27,"column":1}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":22}},"17":{"start":{"line":26,"column":2},"end":{"line":26,"column":22}},"18":{"start":{"line":29,"column":0},"end":{"line":31,"column":1}},"19":{"start":{"line":30,"column":2},"end":{"line":30,"column":67}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":35}},{"start":{"line":19,"column":38},"end":{"line":19,"column":40}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":33}},{"start":{"line":30,"column":37},"end":{"line":30,"column":67}}]}},"code":["var wrap = require(\"lodash.wrap\")","var lookupGetter = require(\"oolong\").lookupGetter","","exports = module.exports = function(must, promisify) {","  must = Object.create(must)","","  for (var name in must)","    if (hasFunction(must, name)) must[name] = promisify(must[name])","","  Object.defineProperty(must, \"assert\", {","    value: wrap(must.assert, exports.prototype.assert),","    configurable: true, writable: true","  })","","  return must","}","","exports.prototype.assert = function assert(orig, ok, msg, opts) {","  opts = opts ? Object.create(opts) : {}","  if (\"stack\" in this) opts.stack = this.stack","  orig.call(this, ok, msg, opts)","}","","exports.prototype.then = function(fn, args, actual) {","  this.actual = actual","  fn.apply(this, args)","}","","function hasFunction(obj, name) {","  return !lookupGetter(obj, name) && typeof obj[name] == \"function\"","}",""],"l":{"1":1,"2":1,"4":1,"5":0,"7":0,"8":0,"10":0,"15":0,"18":1,"19":0,"20":0,"21":0,"24":1,"25":0,"26":0,"29":1,"30":0}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/rejectable.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/rejectable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":32}}},"2":{"name":"promisify","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}}},"3":{"name":"matcher","line":10,"loc":{"start":{"line":10,"column":9},"end":{"line":10,"column":28}}},"4":{"name":"raise","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":34}},"6":{"start":{"line":9,"column":0},"end":{"line":15,"column":1}},"7":{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":34}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":71}},"10":{"start":{"line":12,"column":33},"end":{"line":12,"column":71}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":66}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":57}},"13":{"start":{"line":17,"column":19},"end":{"line":17,"column":56}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["var AssertionError = require(\"./assertion_error\")","var Thenable = require(\"./thenable\")","var then = Thenable.prototype.then","","module.exports = function(must) {","  return Thenable(must, promisify)","}","","function promisify(fn) {","  return function matcher() {","    var must = Object.create(this)","    if (Error.captureStackTrace) Error.captureStackTrace(must, matcher)","    return this.actual.then(raise, then.bind(must, fn, arguments))","  }","}","","function raise() { throw new AssertionError(\"Resolved\") }",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"9":1,"10":0,"11":0,"12":0,"13":0,"17":1}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":35}}},"2":{"name":"stringify","line":18,"loc":{"start":{"line":18,"column":20},"end":{"line":18,"column":44}}},"3":{"name":"clone","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":20}}},"4":{"name":"stringifyValue","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":17}},"5":{"start":{"line":6,"column":0},"end":{"line":16,"column":1}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":75}},"7":{"start":{"line":7,"column":31},"end":{"line":7,"column":75}},"8":{"start":{"line":11,"column":2},"end":{"line":15,"column":4}},"9":{"start":{"line":18,"column":0},"end":{"line":41,"column":1}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":16}},"11":{"start":{"line":21,"column":2},"end":{"line":40,"column":3}},"12":{"start":{"line":25,"column":17},"end":{"line":25,"column":30}},"13":{"start":{"line":26,"column":22},"end":{"line":26,"column":40}},"14":{"start":{"line":27,"column":19},"end":{"line":27,"column":40}},"15":{"start":{"line":28,"column":19},"end":{"line":28,"column":45}},"16":{"start":{"line":29,"column":19},"end":{"line":29,"column":40}},"17":{"start":{"line":30,"column":19},"end":{"line":30,"column":40}},"18":{"start":{"line":31,"column":17},"end":{"line":31,"column":41}},"19":{"start":{"line":32,"column":21},"end":{"line":32,"column":42}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":22}},"21":{"start":{"line":36,"column":6},"end":{"line":36,"column":59}},"22":{"start":{"line":36,"column":33},"end":{"line":36,"column":59}},"23":{"start":{"line":39,"column":13},"end":{"line":39,"column":56}},"24":{"start":{"line":43,"column":0},"end":{"line":47,"column":1}},"25":{"start":{"line":44,"column":2},"end":{"line":44,"column":23}},"26":{"start":{"line":45,"column":2},"end":{"line":45,"column":78}},"27":{"start":{"line":45,"column":23},"end":{"line":45,"column":78}},"28":{"start":{"line":46,"column":2},"end":{"line":46,"column":14}},"29":{"start":{"line":49,"column":0},"end":{"line":57,"column":1}},"30":{"start":{"line":50,"column":2},"end":{"line":56,"column":3}},"31":{"start":{"line":51,"column":22},"end":{"line":51,"column":42}},"32":{"start":{"line":52,"column":19},"end":{"line":52,"column":56}},"33":{"start":{"line":53,"column":19},"end":{"line":53,"column":42}},"34":{"start":{"line":54,"column":19},"end":{"line":54,"column":42}},"35":{"start":{"line":55,"column":13},"end":{"line":55,"column":25}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":21,"type":"switch","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":30}},{"start":{"line":26,"column":4},"end":{"line":26,"column":40}},{"start":{"line":27,"column":4},"end":{"line":27,"column":40}},{"start":{"line":28,"column":4},"end":{"line":28,"column":45}},{"start":{"line":29,"column":4},"end":{"line":29,"column":40}},{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},{"start":{"line":31,"column":4},"end":{"line":31,"column":41}},{"start":{"line":32,"column":4},"end":{"line":32,"column":42}},{"start":{"line":34,"column":4},"end":{"line":36,"column":59}},{"start":{"line":39,"column":4},"end":{"line":39,"column":56}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"4":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":65},"end":{"line":45,"column":70}},{"start":{"line":45,"column":73},"end":{"line":45,"column":78}}]},"5":{"line":50,"type":"switch","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":42}},{"start":{"line":52,"column":4},"end":{"line":52,"column":56}},{"start":{"line":53,"column":4},"end":{"line":53,"column":42}},{"start":{"line":54,"column":4},"end":{"line":54,"column":42}},{"start":{"line":55,"column":4},"end":{"line":55,"column":25}}]},"6":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":41},"end":{"line":52,"column":48}},{"start":{"line":52,"column":51},"end":{"line":52,"column":56}}]}},"code":["var kindof = require(\"kindof\")","var jsonify = require(\"json-stringify-safe\")","var setPrototypeOf = require(\"./es6\").setPrototypeOf","var INDENT = null","","exports.chain = function(self, fn) {","  if (typeof fn != \"function\") throw new TypeError(\"Not a function: \" + fn)","","  // Don't set toString as it seems to break \"source-map-support\". This is","  // a function with an Object prototype, after all.","  return Object.defineProperties(setPrototypeOf(fn.bind(self), self), {","    bind: {value: Function.prototype.apply, configurable: true, writable: true},","    call: {value: Function.prototype.apply, configurable: true, writable: true},","    apply: {value: Function.prototype.apply, configurable: true, writable: true}","  })","}","","exports.stringify = function stringify(obj) {","  var root = obj","","  switch (kindof(obj)) {","    // Allow falling through:","    /* jshint -W086 */","    /* eslint no-fallthrough: 0 */","    case \"null\": return \"null\"","    case \"undefined\": return \"undefined\"","    case \"number\": return obj.toString()","    case \"string\": return JSON.stringify(obj)","    case \"symbol\": return obj.toString()","    case \"regexp\": return obj.toString()","    case \"date\": return obj.toISOString()","    case \"function\": return obj.toString()","","    case \"object\":","      obj = clone(obj)","      if (root instanceof Error) obj.message = root.message","      // Fall through.","","    default: return jsonify(obj, stringifyValue, INDENT)","  }","}","","function clone(obj) {","  var clone = {}, value","  for (var key in obj) clone[key] = (value = obj[key]) === obj ? clone : value","  return clone","}","","function stringifyValue(key, value) {","  switch (kindof(value)) {","    case \"undefined\": return \"[Undefined]\"","    case \"number\": return isNaN(value) ? \"[NaN]\" : value","    case \"symbol\": return value.toString()","    case \"regexp\": return value.toString()","    default: return value","  }","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":0,"11":0,"18":1,"19":0,"21":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"35":0,"36":0,"39":0,"43":1,"44":0,"45":0,"46":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/es6.js":{"path":"/home/travis/build/npmtest/node-npmtest-must/node_modules/must/lib/es6.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":1,"7":0},"b":{"1":[1,0],"2":[1,0],"3":[1,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":50},"end":{"line":1,"column":75}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":29}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":1}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":27}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":12}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":46}},"6":{"start":{"line":13,"column":0},"end":{"line":17,"column":1}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":71}}},"branchMap":{"1":{"line":1,"type":"binary-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":1,"column":46}},{"start":{"line":1,"column":50},"end":{"line":5,"column":1}}]},"2":{"line":7,"type":"cond-expr","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":49}},{"start":{"line":9,"column":2},"end":{"line":11,"column":1}}]},"3":{"line":13,"type":"cond-expr","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":47}},{"start":{"line":15,"column":2},"end":{"line":17,"column":1}}]}},"code":["exports.setPrototypeOf = Object.setPrototypeOf || function(obj, prototype) {","  /* eslint no-proto: 0 */","  obj.__proto__ = prototype","  return obj","}","","exports.startsWith = String.prototype.startsWith ?","  Function.call.bind(String.prototype.startsWith) :","  function(haystack, needle) {","  return haystack.lastIndexOf(needle, 0) === 0","}","","exports.endsWith = String.prototype.endsWith ?","  Function.call.bind(String.prototype.endsWith) :","  function(haystack, needle) {","  return haystack.indexOf(needle, haystack.length - needle.length) >= 0","}",""],"l":{"1":1,"3":0,"4":0,"7":1,"10":0,"13":1,"16":0}}}